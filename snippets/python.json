{
    "DRF_MODEL_SERIALIZER": {
        "prefix": "drf_model_serializer",
        "body": [
            "from rest_framework import serializers",
            "",
            "from ${1:appName}.models import ${2:modelName}",
            "",
            "class ${2:modelName}Serializer(serializers.ModelSerializer):",
            "    class Meta:",
            "        model = ${2:modelName}",
            "        fields = '__all__'"
        ]
    },
    "DRF_REST_API_CRUD": {
        "prefix": "drf_rest_api_crud",
        "body": [
            "from rest_framework.decorators import api_view",
            "from rest_framework.response import Response",
            "from rest_framework import status",
            "",
            "from ${1:appName}.models import ${2:modelName}",
            "from ${1:appName}.serializers import ${2:modelName}Serializer",
            "",
            "# /api/${3:varName}s/",
            "@api_view(['GET', 'POST'])",
            "def ${3:varName}_collection(request):",
            "    if request.method == 'GET':",
            "        ${3:varName}s = ${2:modelName}.objects.all()",
            "        serializer = ${2:modelName}Serializer(${3:varName}s, many=True)",
            "        return Response(serializer.data)",
            "    elif request.method == 'POST':",
            "        data = {",
            "            ${4:requestData}: request.data.get(${4:requestData}),",
            "        }",
            "        serializer = ${2:modelName}Serializer(data=data)",
            "        if serializer.is_valid():",
            "            serializer.save()",
            "            return Response(serializer.data, status=status.HTTP_201_CREATED)",
            "        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)",
            "",
            "# /api/${3:varName}s/{pk}",
            "@api_view(['GET', 'PATCH', 'PUT', 'DELETE'])",
            "def ${3:varName}_detail(request, pk):",
            "    try:",
            "        ${3:varName} = ${2:modelName}.objects.get(pk=pk)",
            "    except ${2:modelName}.DoesNotExist:",
            "        return Response(status=status.HTTP_404_NOT_FOUND)",
            "",
            "    if request.method == 'GET':",
            "        serializer = ${2:modelName}Serializer(${3:varName})",
            "        return Response(serializer.data)",
            "",
            "    elif request.method == 'PUT':",
            "        serializer = ${2:modelName}Serializer(${3:varName}, data=request.data)",
            "        if serializer.is_valid():",
            "            serializer.save()",
            "            return Response(serializer.data)",
            "        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)",
            "    ",
            "    elif request.method == 'PATCH':",
            "        serializer = ${2:modelName}Serializer(${3:varName}, data=request.data, partial=True)",
            "        if serializer.is_valid():",
            "            serializer.save()",
            "            return Response(serializer.data)",
            "        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)",
            "",
            "    elif request.method == 'DELETE':",
            "        ${3:varName}.delete()",
            "        return Response(status=status.HTTP_204_NO_CONTENT)"
        ]
    },
    "DRF_REST_API_URLS": {
        "prefix": "drf_rest_api_urls",
        "body": [
            "from django.urls import include, path",
            "",
            "from ${1:appName}.views import ${2:varName}_collection, ${2:varName}_detail",
            "",
            "urlpatterns = [",
            "    path('api/${3:uri}/', include(([",
            "        path('', ${2:varName}_collection, name='${2:varName}_collection'),",
            "        path('<int:pk>/', ${2:varName}_detail, name='${2:varName}_detail'),",
            "    ], '${2:varName}'))),",
            "]",
            ""
        ]
    },
    "DRF_REST_API_PATCH": {
        "prefix": "drf_rest_api_patch",
        "body": [
            "@api_view(['PATCH'])",
            "def ${1:funcName}(request, pk):",
            "    try:",
            "        ${3:varName} = ${2:modelName}.objects.get(pk=pk)",
            "    except ${2:modelName}.DoesNotExist:",
            "        return Response(status=status.HTTP_404_NOT_FOUND)",
            "    ",
            "    if request.method == 'PATCH':",
            "        data = {",
            "            ${4:requestData}: request.data.get(${4:requestData})",
            "        }",
            "        serializer = ${2:modelName}Serializer(${3:varName}, data=data, partial=True)",
            "        if serializer.is_valid():",
            "            serializer.save()",
            "            return Response(serializer.data)",
            "        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)"
        ]
    }
}