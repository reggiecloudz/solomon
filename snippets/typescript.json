{
    "ANGULAR_REST_SERVICE": {
        "prefix": "ng_rest_service",
        "body": [
            "import { Injectable } from '@angular/core';",
            "import { HttpClient, HttpHeaders } from '@angular/common/http';",
            "import { Observable, throwError } from 'rxjs';",
            "import { retry, catchError } from 'rxjs/operators';",
            "",
            "import { ${1:ModelName} } from '../models/${2:VariableName}.model';",
            "",
            "@Injectable({",
            "  providedIn: 'root'",
            "})",
            "export class ${1:ModelName}Service {",
            "  baseUrl = 'http://127.0.0.1:${3:Port}/api';",
            "",
            "  constructor(private http: HttpClient) { }",
            "",
            "  // http headers",
            "  httpOptions = {",
            "    headers: new HttpHeaders({",
            "      'Content-Type': 'application/json',",
            "    }),",
            "  };",
            "",
            "  // POST",
            "  Create${1:ModelName}(data: any): Observable<${1:ModelName}> {",
            "    return this.http.post<${1:ModelName}>(",
            "      `${this.baseUrl}/${2:VariableName}s/`,",
            "      JSON.stringify(data),",
            "      this.httpOptions",
            "    ).pipe(retry(1), catchError(this.errorHandler));",
            "  }",
            "",
            "  // GET",
            "  Get${1:ModelName}(id: number): Observable<${1:ModelName}> {",
            "    return this.http.get<${1:ModelName}>(`${this.baseUrl}/${2:VariableName}s/${id}/`)",
            "      .pipe(retry(1), catchError(this.errorHandler));",
            "  }",
            "",
            "  // GET",
            "  Get${1:ModelName}s(): Observable<${1:ModelName}> {",
            "    return this.http.get<${1:ModelName}>(`${this.baseUrl}/${2:VariableName}s/`)",
            "      .pipe(retry(1), catchError(this.errorHandler));",
            "  }",
            "",
            "  // PUT",
            "  Update${1:ModelName}(id: number, data: any): Observable<${1:ModelName}> {",
            "    return this.http.put<${1:ModelName}>(",
            "      `${this.baseUrl}api/${2:VariableName}s/${id}/`,",
            "      JSON.stringify(data),",
            "      this.httpOptions",
            "    ).pipe(retry(1), catchError(this.errorHandler));",
            "  }",
            "",
            "  // DELETE",
            "  Delete${1:ModelName}(id: number): Observable<${1:ModelName}> {",
            "    return this.http.delete<${1:ModelName}>(`${this.baseUrl}/${2:VariableName}s/${id}/`, this.httpOptions)",
            "      .pipe(retry(1), catchError(this.errorHandler));",
            "  }",
            "",
            "  errorHandler(error: any) {",
            "    let errorMessage = '';",
            "",
            "    if (error.error instanceof ErrorEvent) {",
            "      // get client-side error",
            "      errorMessage = error.error.message;",
            "    }",
            "    else {",
            "      // get server-side error",
            "      errorMessage = `Error code: ${error.status}\nMessage: ${error.message}`;",
            "    }",
            "",
            "    return throwError(() => {",
            "      return errorMessage",
            "    });",
            "  }",
            "}",
            ""
        ]
    },
    "ANGULAR_REST_SERVICE_ADD_COMPONENT": {
        "prefix": "ng_rest_service_add_component",
        "body": [
            "import { Component, OnInit, NgZone } from '@angular/core';",
            "import { FormBuilder, FormGroup } from '@angular/forms';",
            "import { Router } from '@angular/router';",
            "",
            "import { ${1:ModelName}Service } from '../../services/${2:VariableName}.service';",
            "",
            "@Component({",
            "  selector: 'app-add-${2:VariableName}',",
            "  templateUrl: './add-${2:VariableName}.component.html',",
            "  styleUrls: ['./add-${2:VariableName}.component.css']",
            "})",
            "export class Add${1:ModelName}Component implements OnInit {",
            "",
            "  ${2:VariableName}Form!: FormGroup;",
            "  ${1:ModelName}Arr: any = [];",
            "",
            "  ngOnInit() {",
            "    this.add${1:ModelName}();",
            "  }",
            "  constructor(",
            "    public fb: FormBuilder,",
            "    private ngZone: NgZone,",
            "    private router: Router,",
            "    public ${2:VariableName}Service: ${1:ModelName}Service",
            "  ) {}",
            "  add${1:ModelName}() {",
            "    this.${2:VariableName}Form = this.fb.group({",
            "      label: [''],",
            "      model: [''],",
            "      computer_type: [''],",
            "    });",
            "  }",
            "  submitForm() {",
            "    this.${2:VariableName}Service.Create${1:ModelName}(this.${2:VariableName}Form.value).subscribe((res) => {",
            "      console.log('${1:ModelName} added!');",
            "      this.ngZone.run(() => this.router.navigateByUrl('/${2:VariableName}s'));",
            "    });",
            "  }",
            "}",
            ""
        ]
    },
    "ANGULAR_REST_SERVICE_LIST_COMPONENT": {
        "prefix": "ng_rest_service_list_component",
        "body": [
            "import { Component, OnInit } from '@angular/core';",
            "import { ${1:ModelName} } from '../../models/${2:VariableName}.model';",
            "import { ${1:ModelName}Service } from '../../services/${2:VariableName}.service';",
            "",
            "@Component({",
            "  selector: 'app-list-${2:VariableName}',",
            "  templateUrl: './list-${2:VariableName}.component.html',",
            "  styleUrls: ['./list-${2:VariableName}.component.css']",
            "})",
            "export class List${1:ModelName}Component implements OnInit {",
            "  ${1:ModelName}List: any = [];",
            "",
            "  constructor(",
            "    public ${2:VariableName}Service: ${1:ModelName}Service",
            "  ) { }",
            "",
            "  ngOnInit(): void {",
            "    this.load${1:ModelName}s();",
            "  }",
            "",
            "  load${1:ModelName}s() {",
            "    return this.${2:VariableName}Service.Get${1:ModelName}s().subscribe((data: {}) => {",
            "      this.${1:ModelName}List = data;",
            "    });",
            "  }",
            "",
            "  // Delete ${2:VariableName}",
            "  delete${1:ModelName}(data: any){",
            "    var index = this.${1:ModelName}List.map((x: any) => {return x.id}).indexOf(data.id);",
            "     return this.${2:VariableName}Service.Delete${1:ModelName}(data.id).subscribe(res => {",
            "      this.${1:ModelName}List.splice(index, 1)",
            "       console.log('${1:ModelName} deleted!')",
            "     })",
            "  }",
            "}",
            ""
        ]
    },
    "ANGULAR_REST_SERVICE_EDIT_COMPONENT": {
        "prefix": "ng_rest_service_edit_component",
        "body": [
            "import { Component, OnInit, NgZone } from '@angular/core';",
            "import { FormBuilder, FormGroup } from '@angular/forms';",
            "import { Router, ActivatedRoute } from '@angular/router';",
            "",
            "import { ${1:ModelName}Service } from '../../services/${2:VariableName}.service';",
            "",
            "@Component({",
            "  selector: 'app-edit-${2:VariableName}',",
            "  templateUrl: './edit-${2:VariableName}.component.html',",
            "  styleUrls: ['./edit-${2:VariableName}.component.css']",
            "})",
            "export class Edit${1:ModelName}Component implements OnInit {",
            "  ${1:ModelName}List: any = [];",
            "  update${1:ModelName}Form!: FormGroup;",
            "",
            "  ngOnInit(): void {",
            "    this.updateForm();",
            "  }",
            "",
            "  constructor(",
            "    private actRoute: ActivatedRoute,",
            "    public ${2:VariableName}Service: ${1:ModelName}Service,",
            "    public fb: FormBuilder,",
            "    private ngZone: NgZone,",
            "    private router: Router",
            "  ) {",
            "    var id = this.actRoute.snapshot.paramMap.get('id');",
            "    this.${2:VariableName}Service.Get${1:ModelName}(Number(id)).subscribe((data) => {",
            "      this.update${1:ModelName}Form = this.fb.group({",
            "        label: [data.label],",
            "      });",
            "    });",
            "  }",
            "",
            "  updateForm() {",
            "    this.update${1:ModelName}Form = this.fb.group({",
            "      label: [''],",
            "    });",
            "  }",
            "",
            "  submitForm() {",
            "    var id = this.actRoute.snapshot.paramMap.get('id');",
            "    this.${2:VariableName}Service.Update${1:ModelName}(Number(id), this.update${1:ModelName}Form.value).subscribe(res => {",
            "      this.ngZone.run(() => this.router.navigateByUrl('/${2:VariableName}s'));",
            "    });",
            "  }",
            "}",
            ""
        ]
    },
    "ANGULAR_REST_SERVICE_ADD_TEMPLATE": {
        "prefix": "ng_rest_service_add_template",
        "body": [
            "<div class='container'>",
            "    <div class='row'>",
            "        <div class='col-12'>",
            "            <h3>Add ${1:ModelName}</h3>",
            "            <form [formGroup]=\"${2:VariableName}Form\" (ngSubmit)=\"submitForm()\" novalidate>",
            "                <div class='mb-3'>",
            "                    <label>Label</label>",
            "                    <input type='text' formControlName=\"label\" class='form-control'>",
            "                </div>",
            "                <button type='submit' class='btn btn-primary'>Submit</button>",
            "            </form>",
            "        </div>",
            "    </div>",
            "</div>"
        ]
    },
    "ANGULAR_REST_SERVICE_LIST_TEMPLATE": {
        "prefix": "ng_rest_service_list_template",
        "body": [
            "<div class='container'>",
            "    <div class='row'>",
            "        <!-- ${1:ModelName} table -->",
            "        <div class='col-md-12'>",
            "            <div class='table-responsive'>",
            "                <h3>My ${1:ModelName}s</h3>",
            "                <table class='table table-bordered'>",
            "                    <thead>",
            "                        <tr>",
            "                            <th scope='col'>#</th>",
            "                            <th scope='col'>Label</th>",
            "                            <th scope='col'>Actions</th>",
            "                        </tr>",
            "                    </thead>",
            "                    <tbody>",
            "                        <tr *ngFor=\"let ${2:VariableName} of ${1:ModelName}List\">",
            "                            <th scope='row'>{{${2:VariableName}.id}}</th>",
            "                            <td>{{${2:VariableName}.label}}</td>",
            "                            <td>",
            "                                <button type='button' class='btn btn-success btn-sm' [routerLink]=\"['/edit-${2:VariableName}/', ${2:VariableName}.id]\">Edit</button>",
            "                                <button type='button' class='btn btn-danger btn-sm' (click)=\"delete${1:ModelName}(${2:VariableName})\">Remove</button>",
            "                            </td>",
            "                        </tr>",
            "                    </tbody>",
            "                </table>",
            "            </div>",
            "        </div>",
            "    </div>",
            "</div>"
        ]
    },
    "ANGULAR_REST_SERVICE_EDIT_TEMPLATE": {
        "prefix": "ng_rest_service_edit_template",
        "body": [
            "<div class='container'>",
            "    <div class='row'>",
            "        <!-- Form -->",
            "        <div class='col-md-12'>",
            "            <h3>Edit ${1:ModelName}</h3>",
            "            <form [formGroup]=\"update${1:ModelName}Form\" (ngSubmit)=\"submitForm()\" novalidate>",
            "                <div class='mb-3'>",
            "                    <label>Label</label>",
            "                    <input type='text' formControlName=\"label\" class='form-control'>",
            "                </div>",
            "                <button type='submit' class='btn btn-primary'>Update</button>",
            "            </form>",
            "        </div>",
            "    </div>",
            "</div>"
        ]
    }
}